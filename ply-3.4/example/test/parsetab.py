
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\xd5]O\xdc\xf4~\x1b\xca\xaem\xbb3\x95\xb9\x99"'
    
_lr_action_items = {'NUMBER':([8,29,32,34,36,41,56,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,88,89,91,],[12,12,48,51,61,48,51,-51,-52,-54,99,-49,-50,-53,101,48,-44,-43,51,61,51,51,51,51,51,51,111,]),'LOR':([50,98,99,100,101,],[78,-47,-48,-45,-46,]),'WHILE':([10,16,20,22,26,30,31,33,37,39,40,43,44,66,93,94,95,112,114,115,116,118,121,122,123,124,127,128,129,130,132,133,135,136,138,140,141,143,145,147,148,],[18,18,-12,18,-16,18,-19,-15,-11,-13,-14,-17,-18,18,18,18,18,18,18,18,18,18,18,18,18,18,-37,18,18,18,18,18,-39,-38,18,-33,18,-40,-35,-34,-36,]),'MINUS':([34,51,54,55,56,80,82,83,84,85,86,87,88,89,103,105,106,107,108,109,],[56,-60,-61,85,56,56,56,56,56,56,-61,-59,56,56,-61,-58,-57,-55,-56,85,]),'DIVIDE':([51,54,55,86,87,103,105,106,107,108,109,],[-60,-61,82,-61,-59,-61,-58,-57,82,82,82,]),'LE':([48,49,],[69,69,]),'RPAREN':([8,12,13,14,15,45,47,50,60,61,62,64,98,99,100,101,102,104,110,111,],[11,-10,28,-7,-9,-8,68,-41,90,-28,-27,92,-47,-48,-45,-46,-42,120,-29,-30,]),'NEWLINE':([1,6,9,11,17,19,23,24,27,28,38,42,46,51,52,53,54,55,66,68,86,87,90,92,93,96,103,105,106,107,108,109,112,117,119,120,123,125,126,131,134,137,139,142,144,146,],[5,10,16,-6,31,33,39,40,44,-5,63,65,67,-60,-21,-22,-61,-20,94,97,-61,-59,-25,113,114,118,-61,-58,-57,-55,-56,-24,121,127,129,-26,132,135,136,140,143,-31,145,147,-32,148,]),'NE':([48,49,],[71,71,]),'LT':([48,49,],[73,73,]),'COMMA':([12,14,15,21,51,55,57,58,59,60,61,62,86,87,104,105,106,107,108,109,110,111,],[-10,29,-9,35,-60,-20,88,-23,35,91,-28,-27,-61,-59,91,-58,-57,-55,-56,-24,-29,-30,]),'PLUS':([51,54,55,86,87,103,105,106,107,108,109,],[-60,-61,84,-61,-59,-61,-58,-57,-55,-56,84,]),'IDENTIFIER':([0,2,3,7,8,10,16,20,22,26,29,30,31,32,33,34,35,36,37,39,40,41,43,44,56,63,66,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,88,89,91,93,94,95,112,114,115,116,118,121,122,123,124,127,128,129,130,132,133,135,136,138,140,141,143,145,147,148,],[4,-2,4,-1,15,21,21,-12,21,-16,15,21,-19,49,-15,54,59,62,-11,-13,-14,49,-17,-18,86,-4,21,-3,-51,-52,-54,98,-49,-50,-53,100,49,-44,-43,103,62,86,86,86,86,86,86,110,21,21,21,21,21,21,21,21,21,21,21,21,-37,21,21,21,21,21,-39,-38,21,-33,21,-40,-35,-34,-36,]),'$end':([2,3,7,63,67,],[-2,0,-1,-4,-3,]),'GT':([48,49,],[74,74,]),'RBRACE':([20,22,26,30,31,33,37,39,40,43,44,95,115,116,122,124,127,128,130,133,135,136,138,140,141,143,145,147,148,],[-12,38,-16,46,-19,-15,-11,-13,-14,-17,-18,117,125,126,131,134,-37,137,139,142,-39,-38,144,-33,146,-40,-35,-34,-36,]),'EQUALS':([21,54,59,103,],[34,80,89,80,]),'ELSE':([26,140,145,147,148,],[42,-33,-35,-34,-36,]),'GE':([48,49,],[70,70,]),'LAND':([50,98,99,100,101,],[79,-47,-48,-45,-46,]),'LPAREN':([4,18,21,25,54,],[8,32,36,41,81,]),'TIMES':([51,54,55,86,87,103,105,106,107,108,109,],[-60,-61,83,-61,-59,-61,-58,-57,83,83,83,]),'EQ':([48,49,],[75,75,]),'IF':([10,16,20,22,26,30,31,33,37,39,40,43,44,66,93,94,95,112,114,115,116,118,121,122,123,124,127,128,129,130,132,133,135,136,138,140,141,143,145,147,148,],[25,25,-12,25,-16,25,-19,-15,-11,-13,-14,-17,-18,25,25,25,25,25,25,25,25,25,25,25,25,25,-37,25,25,25,25,25,-39,-38,25,-33,25,-40,-35,-34,-36,]),'LBRACE':([1,5,11,28,42,65,68,92,97,113,],[6,9,-6,-5,66,93,96,112,119,123,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'body':([10,16,66,93,94,112,114,118,121,123,129,132,],[22,30,95,115,116,122,124,128,130,133,138,141,]),'condition_list':([32,41,77,],[47,64,102,]),'head':([0,3,],[1,1,]),'function_definition':([0,3,],[2,7,]),'parralel_assignment':([10,16,22,30,35,66,93,94,95,112,114,115,116,118,121,122,123,124,128,129,130,132,133,138,141,],[19,19,19,19,57,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'assignment':([10,16,22,30,34,35,66,80,93,94,95,112,114,115,116,118,121,122,123,124,128,129,130,132,133,138,141,],[23,23,23,23,52,58,23,52,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'if_block':([10,16,22,30,66,93,94,95,112,114,115,116,118,121,122,123,124,128,129,130,132,133,138,141,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'parameters_list':([36,81,],[60,104,]),'function_call':([10,16,22,30,66,93,94,95,112,114,115,116,118,121,122,123,124,128,129,130,132,133,138,141,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'comp_symbol':([48,49,],[72,76,]),'comb_symbol':([50,],[77,]),'while_block':([10,16,22,30,66,93,94,95,112,114,115,116,118,121,122,123,124,128,129,130,132,133,138,141,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'program':([0,],[3,]),'argument_list':([8,29,],[13,45,]),'statement':([10,16,22,30,66,93,94,95,112,114,115,116,118,121,122,123,124,128,129,130,132,133,138,141,],[20,20,37,37,20,20,20,37,20,20,37,37,20,20,37,20,37,37,20,37,20,37,37,37,]),'multiple_assignment':([10,16,22,30,34,66,80,93,94,95,112,114,115,116,118,121,122,123,124,128,129,130,132,133,138,141,],[24,24,24,24,53,24,53,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'argument_declaration':([8,29,],[14,14,]),'expression':([34,56,80,82,83,84,85,88,89,],[55,87,55,105,106,107,108,109,55,]),'condition':([32,41,77,],[50,50,50,]),'else_block':([26,],[43,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> program function_definition','program',2,'p_program','test.py',158),
  ('program -> function_definition','program',1,'p_program','test.py',159),
  ('function_definition -> head NEWLINE LBRACE NEWLINE body RBRACE NEWLINE','function_definition',7,'p_function_definition','test.py',172),
  ('function_definition -> head LBRACE NEWLINE body RBRACE NEWLINE','function_definition',6,'p_function_definition','test.py',173),
  ('head -> IDENTIFIER LPAREN argument_list RPAREN','head',4,'p_head','test.py',181),
  ('head -> IDENTIFIER LPAREN RPAREN','head',3,'p_head','test.py',182),
  ('argument_list -> argument_declaration','argument_list',1,'p_argument_list','test.py',187),
  ('argument_list -> argument_declaration COMMA argument_list','argument_list',3,'p_argument_list','test.py',188),
  ('argument_declaration -> IDENTIFIER','argument_declaration',1,'p_argument_declaration','test.py',196),
  ('argument_declaration -> NUMBER','argument_declaration',1,'p_argument_declaration','test.py',197),
  ('body -> body statement','body',2,'p_body','test.py',202),
  ('body -> statement','body',1,'p_body','test.py',203),
  ('statement -> assignment NEWLINE','statement',2,'p_statement','test.py',215),
  ('statement -> multiple_assignment NEWLINE','statement',2,'p_statement','test.py',216),
  ('statement -> parralel_assignment NEWLINE','statement',2,'p_statement','test.py',217),
  ('statement -> if_block','statement',1,'p_statement','test.py',218),
  ('statement -> if_block else_block','statement',2,'p_statement','test.py',219),
  ('statement -> while_block NEWLINE','statement',2,'p_statement','test.py',220),
  ('statement -> function_call NEWLINE','statement',2,'p_statement','test.py',221),
  ('assignment -> IDENTIFIER EQUALS expression','assignment',3,'p_assignment','test.py',231),
  ('multiple_assignment -> assignment','multiple_assignment',1,'p_multiple_assignment','test.py',237),
  ('multiple_assignment -> IDENTIFIER EQUALS multiple_assignment','multiple_assignment',3,'p_multiple_assignment','test.py',238),
  ('parralel_assignment -> assignment','parralel_assignment',1,'p_parralel_assignment','test.py',247),
  ('parralel_assignment -> IDENTIFIER COMMA parralel_assignment COMMA expression','parralel_assignment',5,'p_parralel_assignment','test.py',248),
  ('function_call -> IDENTIFIER LPAREN parameters_list RPAREN','function_call',4,'p_function_call','test.py',257),
  ('function_call -> IDENTIFIER EQUALS IDENTIFIER LPAREN parameters_list RPAREN','function_call',6,'p_function_call','test.py',258),
  ('parameters_list -> IDENTIFIER','parameters_list',1,'p_parameters_list','test.py',266),
  ('parameters_list -> NUMBER','parameters_list',1,'p_parameters_list','test.py',267),
  ('parameters_list -> parameters_list COMMA IDENTIFIER','parameters_list',3,'p_parameters_list','test.py',268),
  ('parameters_list -> parameters_list COMMA NUMBER','parameters_list',3,'p_parameters_list','test.py',269),
  ('while_block -> WHILE LPAREN condition_list RPAREN LBRACE NEWLINE body RBRACE','while_block',8,'p_while_block','test.py',277),
  ('while_block -> WHILE LPAREN condition_list RPAREN NEWLINE LBRACE NEWLINE body RBRACE','while_block',9,'p_while_block','test.py',278),
  ('if_block -> IF LPAREN condition_list RPAREN LBRACE body RBRACE NEWLINE','if_block',8,'p_if_block','test.py',288),
  ('if_block -> IF LPAREN condition_list RPAREN NEWLINE LBRACE body RBRACE NEWLINE','if_block',9,'p_if_block','test.py',289),
  ('if_block -> IF LPAREN condition_list RPAREN LBRACE NEWLINE body RBRACE NEWLINE','if_block',9,'p_if_block','test.py',290),
  ('if_block -> IF LPAREN condition_list RPAREN NEWLINE LBRACE NEWLINE body RBRACE NEWLINE','if_block',10,'p_if_block','test.py',291),
  ('else_block -> ELSE LBRACE body RBRACE NEWLINE','else_block',5,'p_else_block','test.py',302),
  ('else_block -> ELSE LBRACE NEWLINE body RBRACE NEWLINE','else_block',6,'p_else_block','test.py',303),
  ('else_block -> ELSE NEWLINE LBRACE body RBRACE NEWLINE','else_block',6,'p_else_block','test.py',304),
  ('else_block -> ELSE NEWLINE LBRACE NEWLINE body RBRACE NEWLINE','else_block',7,'p_else_block','test.py',305),
  ('condition_list -> condition','condition_list',1,'p_condition_list','test.py',315),
  ('condition_list -> condition comb_symbol condition_list','condition_list',3,'p_condition_list','test.py',316),
  ('comb_symbol -> LAND','comb_symbol',1,'p_comb_symbol','test.py',326),
  ('comb_symbol -> LOR','comb_symbol',1,'p_comb_symbol','test.py',327),
  ('condition -> IDENTIFIER comp_symbol IDENTIFIER','condition',3,'p_condition','test.py',331),
  ('condition -> IDENTIFIER comp_symbol NUMBER','condition',3,'p_condition','test.py',332),
  ('condition -> NUMBER comp_symbol IDENTIFIER','condition',3,'p_condition','test.py',333),
  ('condition -> NUMBER comp_symbol NUMBER','condition',3,'p_condition','test.py',334),
  ('comp_symbol -> LT','comp_symbol',1,'p_comp_symbol','test.py',344),
  ('comp_symbol -> GT','comp_symbol',1,'p_comp_symbol','test.py',345),
  ('comp_symbol -> LE','comp_symbol',1,'p_comp_symbol','test.py',346),
  ('comp_symbol -> GE','comp_symbol',1,'p_comp_symbol','test.py',347),
  ('comp_symbol -> EQ','comp_symbol',1,'p_comp_symbol','test.py',348),
  ('comp_symbol -> NE','comp_symbol',1,'p_comp_symbol','test.py',349),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','test.py',353),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','test.py',354),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','test.py',355),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','test.py',356),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','test.py',364),
  ('expression -> NUMBER','expression',1,'p_expression_number','test.py',369),
  ('expression -> IDENTIFIER','expression',1,'p_expression_name','test.py',374),
]
